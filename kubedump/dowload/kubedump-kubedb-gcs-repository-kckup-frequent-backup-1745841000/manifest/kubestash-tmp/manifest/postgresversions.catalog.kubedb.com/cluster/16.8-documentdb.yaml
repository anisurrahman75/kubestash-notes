apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  annotations:
    meta.helm.sh/release-name: kubedb
    meta.helm.sh/release-namespace: kubedb
  creationTimestamp: "2025-04-28T11:28:31Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/version: v2025.3.24
    helm.sh/chart: kubedb-catalog-v2025.3.24
  managedFields:
  - apiVersion: catalog.kubedb.com/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/version: {}
          f:helm.sh/chart: {}
      f:spec:
        .: {}
        f:archiver:
          .: {}
          f:addon:
            .: {}
            f:name: {}
            f:tasks:
              .: {}
              f:fullBackup:
                .: {}
                f:name: {}
              f:fullBackupRestore:
                .: {}
                f:name: {}
              f:manifestBackup:
                .: {}
                f:name: {}
              f:manifestRestore:
                .: {}
                f:name: {}
              f:volumeSnapshot:
                .: {}
                f:name: {}
          f:walg:
            .: {}
            f:image: {}
        f:coordinator:
          .: {}
          f:image: {}
        f:db:
          .: {}
          f:baseOS: {}
          f:image: {}
        f:distribution: {}
        f:exporter:
          .: {}
          f:image: {}
        f:initContainer:
          .: {}
          f:image: {}
        f:podSecurityPolicies:
          .: {}
          f:databasePolicyName: {}
        f:securityContext:
          .: {}
          f:runAsAnyNonRoot: {}
          f:runAsUser: {}
        f:stash:
          .: {}
          f:addon:
            .: {}
            f:backupTask:
              .: {}
              f:name: {}
            f:restoreTask:
              .: {}
              f:name: {}
        f:ui: {}
        f:updateConstraints:
          .: {}
          f:allowlist: {}
        f:version: {}
    manager: helm
    operation: Update
    time: "2025-04-28T11:28:31Z"
  name: 16.8-documentdb
  resourceVersion: "59462"
  uid: e42e46b4-cbae-4715-ade6-00152ee1579f
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        fullBackup:
          name: physical-backup
        fullBackupRestore:
          name: physical-backup-restore
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: ghcr.io/kubedb/postgres-archiver:v0.14.0_16.1-bookworm
  coordinator:
    image: ghcr.io/kubedb/pg-coordinator:v0.37.0
  db:
    baseOS: bookworm
    image: ghcr.io/appscode-images/postgres-documentdb:16-0.102.0-ferretdb-2.0.0
  distribution: DocumentDB
  exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
  initContainer:
    image: ghcr.io/kubedb/postgres-init:0.17.1
  podSecurityPolicies:
    databasePolicyName: ""
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  ui:
  - name: pgadmin
    version: v2024.4.27
  - name: dbgate
    version: v2024.4.27
  updateConstraints:
    allowlist:
    - '>= 16.8'
  version: "16.8"
